{"version":3,"file":"component---gatsby-theme-academic-src-templates-tags-index-jsx-8fc1ef1207bde72785e1.js","mappings":"0UAwMA,EAnLgB,SAAC,GAGV,IAFLA,EAEI,EAFJA,KAGMC,EADF,EADJC,YAE4BC,IAMtBC,EAAOJ,EAAKK,OAAOC,MACnBC,EAAQ,IAASH,GAAM,SAACI,GAAD,MAAuC,UAA9BA,EAAIC,KAAKC,YAAYC,QACrDC,EAAW,IAASR,GAAM,SAACI,GAAD,MAAuC,aAA9BA,EAAIC,KAAKC,YAAYC,QACxDE,EAAU,IAAST,GAAM,SAACI,GAAD,MAAuC,YAA9BA,EAAIC,KAAKC,YAAYC,QACvDG,EAAOd,EAAKe,OAASf,EAAKe,OAAOT,MAAQ,GACzCU,EAAU,IAAY,IAAQF,GAAM,SAACX,GAAD,OAASA,EAAIM,KAAKQ,QAAO,QAE7Dd,EAAMa,EAAQf,GACdiB,EAAcf,EAAMA,EAAIgB,KAAO,IAC/BC,EAAiBjB,EAAMA,EAAIkB,YAAc,GAE/C,OACE,gCACE,gBAAC,IAAD,CACEC,MAAOrB,EACPoB,YAAW,kBAAoBpB,EAApB,KAAgCmB,EAAhC,IACXD,KAAMI,IAAAA,eAAqBL,EAAaf,GACxCqB,SAAU,CAACvB,KAEb,uBAAKwB,UAAS,+CACZ,sBAAIA,UAAU,iBAAd,IAEGxB,GAKH,sBAAIwB,UAAU,cACXL,IAGJR,EAASc,OAAS,EACjB,gCACE,sCACA,gBAACC,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKjB,KAAK,QACzBC,EAASiB,KAAI,SAACC,EAAMC,GAAP,OAEZ,gBAACC,EAAA,EAAD,CAAKD,IAAKA,EAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzC,gBAACC,EAAA,EAAD,CAAcrC,KAAM8B,EAAMd,QAASA,UAKzC,KACHH,EAAQa,OAAS,EAChB,gCACE,sCACA,gBAACC,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKjB,KAAK,QACzBE,EAAQgB,KAAI,SAACC,EAAMC,GAAP,OAEX,gBAACC,EAAA,EAAD,CAAKD,IAAKA,EAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzC,gBAACE,EAAA,EAAD,CAAatC,KAAM8B,EAAMd,QAASA,UAKxC,KACHT,EAAMmB,OAAS,EACd,gCACE,mCACA,gBAACC,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKjB,KAAK,QACzBJ,EAAMsB,KAAI,SAACC,EAAMC,GAAP,OAET,gBAACC,EAAA,EAAD,CAAKD,IAAKA,EAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,gBAACG,EAAA,EAAD,CAAUvC,KAAM8B,EAAMd,QAASA,UAKrC,Q,sBCpGV,IAAIwB,EAAW,EAAQ,OAoBvBC,EAAOC,QAVP,SAAoBC,EAAYC,GAC9B,IAAIC,EAAS,GAMb,OALAL,EAASG,GAAY,SAASG,EAAOC,EAAOJ,GACtCC,EAAUE,EAAOC,EAAOJ,IAC1BE,EAAOG,KAAKF,MAGTD,I,sBCjBT,IAAII,EAAc,EAAQ,OACtBC,EAAa,EAAQ,OACrBC,EAAe,EAAQ,OACvBC,EAAU,EAAQ,OAgDtBX,EAAOC,QALP,SAAgBC,EAAYC,GAE1B,OADWQ,EAAQT,GAAcM,EAAcC,GACnCP,EAAYQ,EAAaP,EAAW","sources":["webpack://example/../gatsby-theme-academic/src/templates/tags/index.jsx","webpack://example/../node_modules/lodash/_baseFilter.js","webpack://example/../node_modules/lodash/filter.js"],"sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport { Container, Row, Col } from 'rsuite';\nimport { graphql } from 'gatsby';\n// import Img from 'gatsby-image';\n/* App imports */\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PostCard from '../../components/PostCard';\n// import Statistics from '../../../content/statistics.json';\nimport ResearchCard from '../../components/ResearchCard';\nimport ProjectCard from '../../components/ProjectCard';\nimport SEO from '../../components/Seo';\nimport Utils from '../../utils/pageUtils';\n\nimport * as style from './tags.module.less';\n\nconst TagPage = ({\n  data,\n  pageContext,\n}) => {\n  const tagName = pageContext.tag;\n  // const { tag } = pageContext;\n  // const tagName = Statistics.tags[tag].name || tag;\n  // const tagPagePath = siteMetadata.pages.tags;\n  // const tagImage = data.allFile.edges.find((edge) => edge.node.name === tag).node\n  //   .childImageSharp.fluid;\n  const docs = data.allMdx.edges;\n  const posts = _.filter(docs, (doc) => doc.node.frontmatter.type === 'posts');\n  const research = _.filter(docs, (doc) => doc.node.frontmatter.type === 'research');\n  const project = _.filter(docs, (doc) => doc.node.frontmatter.type === 'project');\n  const tags = data.allTag ? data.allTag.edges : [];\n  const tagsMap = _.mapValues(_.keyBy(tags, (tag) => tag.node.name), 'node');\n\n  const tag = tagsMap[tagName];\n  const tagPagePath = tag ? tag.path : '#';\n  const tagDescription = tag ? tag.description : '';\n\n  return (\n    <>\n      <SEO\n        title={tagName}\n        description={`All post about ${tagName}. ${tagDescription} `}\n        path={Utils.resolvePageUrl(tagPagePath, tag)}\n        keywords={[tagName]}\n      />\n      <div className={`marginTopTitle ${style.tagsList}`}>\n        <h1 className=\"titleSeparate\">\n          #\n          {tagName}\n        </h1>\n        {/* <div className={style.bannerImgContainer}> */}\n        {/*  <Img className={style.bannerImg} fluid={tagImage} alt={tagName} /> */}\n        {/* </div> */}\n        <h4 className=\"textCenter\">\n          {tagDescription}\n        </h4>\n      </div>\n      {research.length > 0 ? (\n        <>\n          <h2>Research</h2>\n          <Row gutter={[20, 20]} type=\"flex\">\n            {research.map((post, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={24} lg={24}>\n                <ResearchCard data={post} tagsMap={tagsMap} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      ) : null}\n      {project.length > 0 ? (\n        <>\n          <h2>Projects</h2>\n          <Row gutter={[20, 20]} type=\"flex\">\n            {project.map((post, key) => ( \n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={24} lg={24}>\n                <ProjectCard data={post} tagsMap={tagsMap} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      ) : null}\n      {posts.length > 0 ? (\n        <>\n          <h2>Posts</h2>\n          <Row gutter={[20, 20]} type=\"flex\">\n            {posts.map((post, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                <PostCard data={post} tagsMap={tagsMap} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nTagPage.propTypes = {\n  data: PropTypes.shape({\n    allTag: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            color: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            description: PropTypes.string,\n            path: PropTypes.string,\n          }),\n        }),\n      ).isRequired,\n    }).isRequired,\n    allMdx: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allTag {\n      edges {\n        node {\n          color\n          name\n          description\n          path\n        }\n      }\n    }\n    allMdx(\n      filter: {\n        frontmatter: { tags: { in: [$tag] } } \n        fileAbsolutePath: { regex: \"/index.mdx?$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 320, maxHeight: 180, fit: CONTAIN, background: \"rgba(0,0,0,0)\") {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n            date\n            venue\n            authors\n            path\n            title\n            tags\n            excerpt\n            links {\n                name\n                url\n            }\n            type\n          }\n        }\n      }\n    }\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxHeight: 600) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["data","tagName","pageContext","tag","docs","allMdx","edges","posts","doc","node","frontmatter","type","research","project","tags","allTag","tagsMap","name","tagPagePath","path","tagDescription","description","title","Utils","keywords","className","length","Row","gutter","map","post","key","Col","xs","sm","md","lg","ResearchCard","ProjectCard","PostCard","baseEach","module","exports","collection","predicate","result","value","index","push","arrayFilter","baseFilter","baseIteratee","isArray"],"sourceRoot":""}