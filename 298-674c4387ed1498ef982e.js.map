{"version":3,"file":"298-674c4387ed1498ef982e.js","mappings":"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","sources":["webpack://example/../node_modules/katex/dist/contrib/auto-render.mjs","webpack://example/../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import katex from '../katex.mjs';\n/* eslint no-constant-condition:0 */\n\nvar findEndOfMath = function findEndOfMath(delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  var index = startIndex;\n  var braceLevel = 0;\n  var delimLength = delimiter.length;\n\n  while (index < text.length) {\n    var character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === \"\\\\\") {\n      index++;\n    } else if (character === \"{\") {\n      braceLevel++;\n    } else if (character === \"}\") {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nvar escapeRegex = function escapeRegex(string) {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\nvar amsRegex = /^\\\\begin{/;\n\nvar splitAtDelimiters = function splitAtDelimiters(text, delimiters) {\n  var index;\n  var data = [];\n  var regexLeft = new RegExp(\"(\" + delimiters.map(function (x) {\n    return escapeRegex(x.left);\n  }).join(\"|\") + \")\");\n\n  while (true) {\n    index = text.search(regexLeft);\n\n    if (index === -1) {\n      break;\n    }\n\n    if (index > 0) {\n      data.push({\n        type: \"text\",\n        data: text.slice(0, index)\n      });\n      text = text.slice(index); // now text starts with delimiter\n    } // ... so this always succeeds:\n\n\n    var i = delimiters.findIndex(function (delim) {\n      return text.startsWith(delim.left);\n    });\n    index = findEndOfMath(delimiters[i].right, text, delimiters[i].left.length);\n\n    if (index === -1) {\n      break;\n    }\n\n    var rawData = text.slice(0, index + delimiters[i].right.length);\n    var math = amsRegex.test(rawData) ? rawData : text.slice(delimiters[i].left.length, index);\n    data.push({\n      type: \"math\",\n      data: math,\n      rawData: rawData,\n      display: delimiters[i].display\n    });\n    text = text.slice(index + delimiters[i].right.length);\n  }\n\n  if (text !== \"\") {\n    data.push({\n      type: \"text\",\n      data: text\n    });\n  }\n\n  return data;\n};\n/* eslint no-console:0 */\n\n/* Note: optionsCopy is mutated by this method. If it is ever exposed in the\n * API, we should copy it before mutating.\n */\n\n\nvar renderMathInText = function renderMathInText(text, optionsCopy) {\n  var data = splitAtDelimiters(text, optionsCopy.delimiters);\n\n  if (data.length === 1 && data[0].type === 'text') {\n    // There is no formula in the text.\n    // Let's return null which means there is no need to replace\n    // the current text node with a new one.\n    return null;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].type === \"text\") {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      var span = document.createElement(\"span\");\n      var math = data[i].data; // Override any display mode defined in the settings with that\n      // defined by the text itself\n\n      optionsCopy.displayMode = data[i].display;\n\n      try {\n        if (optionsCopy.preProcess) {\n          math = optionsCopy.preProcess(math);\n        }\n\n        katex.render(math, span, optionsCopy);\n      } catch (e) {\n        if (!(e instanceof katex.ParseError)) {\n          throw e;\n        }\n\n        optionsCopy.errorCallback(\"KaTeX auto-render: Failed to parse `\" + data[i].data + \"` with \", e);\n        fragment.appendChild(document.createTextNode(data[i].rawData));\n        continue;\n      }\n\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\nvar renderElem = function renderElem(elem, optionsCopy) {\n  for (var i = 0; i < elem.childNodes.length; i++) {\n    var childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // Text node\n      var frag = renderMathInText(childNode.textContent, optionsCopy);\n\n      if (frag) {\n        i += frag.childNodes.length - 1;\n        elem.replaceChild(frag, childNode);\n      }\n    } else if (childNode.nodeType === 1) {\n      (function () {\n        // Element node\n        var className = ' ' + childNode.className + ' ';\n        var shouldRender = optionsCopy.ignoredTags.indexOf(childNode.nodeName.toLowerCase()) === -1 && optionsCopy.ignoredClasses.every(function (x) {\n          return className.indexOf(' ' + x + ' ') === -1;\n        });\n\n        if (shouldRender) {\n          renderElem(childNode, optionsCopy);\n        }\n      })();\n    } // Otherwise, it's something else, and ignore it.\n\n  }\n};\n\nvar renderMathInElement = function renderMathInElement(elem, options) {\n  if (!elem) {\n    throw new Error(\"No element provided to render\");\n  }\n\n  var optionsCopy = {}; // Object.assign(optionsCopy, option)\n\n  for (var option in options) {\n    if (options.hasOwnProperty(option)) {\n      optionsCopy[option] = options[option];\n    }\n  } // default options\n\n\n  optionsCopy.delimiters = optionsCopy.delimiters || [{\n    left: \"$$\",\n    right: \"$$\",\n    display: true\n  }, {\n    left: \"\\\\(\",\n    right: \"\\\\)\",\n    display: false\n  }, // LaTeX uses $…$, but it ruins the display of normal `$` in text:\n  // {left: \"$\", right: \"$\", display: false},\n  // $ must come after $$\n  // Render AMS environments even if outside $$…$$ delimiters.\n  {\n    left: \"\\\\begin{equation}\",\n    right: \"\\\\end{equation}\",\n    display: true\n  }, {\n    left: \"\\\\begin{align}\",\n    right: \"\\\\end{align}\",\n    display: true\n  }, {\n    left: \"\\\\begin{alignat}\",\n    right: \"\\\\end{alignat}\",\n    display: true\n  }, {\n    left: \"\\\\begin{gather}\",\n    right: \"\\\\end{gather}\",\n    display: true\n  }, {\n    left: \"\\\\begin{CD}\",\n    right: \"\\\\end{CD}\",\n    display: true\n  }, {\n    left: \"\\\\[\",\n    right: \"\\\\]\",\n    display: true\n  }];\n  optionsCopy.ignoredTags = optionsCopy.ignoredTags || [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\", \"option\"];\n  optionsCopy.ignoredClasses = optionsCopy.ignoredClasses || [];\n  optionsCopy.errorCallback = optionsCopy.errorCallback || console.error; // Enable sharing of global macros defined via `\\gdef` between different\n  // math elements within a single call to `renderMathInElement`.\n\n  optionsCopy.macros = optionsCopy.macros || {};\n  renderElem(elem, optionsCopy);\n};\n\nexport { renderMathInElement as default };","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["findEndOfMath","delimiter","text","startIndex","index","braceLevel","delimLength","length","character","slice","amsRegex","renderMathInText","optionsCopy","data","delimiters","regexLeft","RegExp","map","x","left","replace","join","search","push","type","i","findIndex","delim","startsWith","right","rawData","math","test","display","splitAtDelimiters","fragment","document","createDocumentFragment","appendChild","createTextNode","span","createElement","displayMode","preProcess","e","errorCallback","renderElem","elem","childNodes","childNode","nodeType","frag","textContent","replaceChild","className","ignoredTags","indexOf","nodeName","toLowerCase","ignoredClasses","every","renderMathInElement","options","Error","option","hasOwnProperty","console","error","macros","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","err","unsupportedIterableToArray"],"sourceRoot":""}